# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
{
  ".source.js":
    "React-Redux: class skeleton":
      prefix: "rrc"
      body: "import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass $1 extends Component {\n\tconstructor(props) { \n\t\tsuper(props) \n\t} \n\n\trender () {\n\t\n\t}\n}\n\nconst mapStateToProps = state => ({}) \n\nconst mapDispatchToProps = {} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1})"
}
